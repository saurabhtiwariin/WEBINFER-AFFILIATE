{"version":3,"sources":["webpack:///./src/app/modules/brands/component/brand/brand.component.html","webpack:///./src/app/modules/brands/component/brands/brands.component.html","webpack:///./src/app/modules/brands/brand-routing.module.ts","webpack:///./src/app/modules/brands/brands.module.ts","webpack:///./src/app/modules/brands/component/brand/brand.component.less","webpack:///./src/app/modules/brands/component/brand/brand.component.ts","webpack:///./src/app/modules/brands/component/brands/brands.component.less","webpack:///./src/app/modules/brands/component/brands/brands.component.ts","webpack:///./src/app/modules/brands/services/brand.service.ts"],"names":[],"mappings":"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","file":"modules-brands-brands-module-es5.js","sourcesContent":["module.exports = \"<div class=\\\"uk-container uk-container-expand uk-padding-remove-horizontal uk-margin-left uk-margin-right\\\">\\n  <h1 class=\\\"uk-heading-primary\\\">Brands</h1>\\n\\n  <div *ngIf=\\\"brands.loading\\\" class=\\\"uk-container uk-text-center uk-margin\\\">\\n    <div uk-spinner=\\\"ratio: 3\\\"></div>\\n  </div> \\n  \\n  <div class=\\\"uk-grid-match uk-child-width-1-5@l uk-child-width-1-4@m uk-child-width-1-2@s\\\" uk-grid>\\n    <div *ngFor=\\\"let brand of brands.data\\\">\\n      <p>{{brand.name}}</p>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"<app-brand [brands]=\\\"( brands$ | async )\\\"></app-brand>\\n\\n\"","import { NgModule, Component } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router'; \r\nimport { BrandsComponent } from './component/brands/brands.component';\r\n\r\nconst routes: Routes = [\r\n{\r\n    path: '',\r\n    component: BrandsComponent\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class BrandsRoutingModule { }\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';  \nimport { BrandsComponent } from './component/brands/brands.component';\nimport { BrandsRoutingModule } from './brand-routing.module';\nimport { BrandComponent } from './component/brand/brand.component';\n\n@NgModule({\n  declarations: [ BrandsComponent, BrandComponent],\n  imports: [\n    CommonModule,\n    BrandsRoutingModule\n  ]\n})\nexport class BrandsModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYnJhbmRzL2NvbXBvbmVudC9icmFuZC9icmFuZC5jb21wb25lbnQubGVzcyJ9 */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Brand } from 'src/app/modules/brands/entity/brand';\nimport { DataState } from '../../services/brand.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-brand',\n  templateUrl: './brand.component.html',\n  styleUrls: ['./brand.component.less']\n})\nexport class BrandComponent implements OnInit {\n\n  @Input() brands: DataState<Brand[]>;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYnJhbmRzL2NvbXBvbmVudC9icmFuZHMvYnJhbmRzLmNvbXBvbmVudC5sZXNzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { BrandService } from '../../services/brand.service';\n\n\n@Component({\n  selector: 'app-brands',\n  templateUrl: './brands.component.html',\n  styleUrls: ['./brands.component.less']\n})\nexport class BrandsComponent implements OnInit {\n\n  brands$ = this.brandService.getBrands$();\n\n  constructor(private brandService: BrandService) { }\n\n  ngOnInit() {   \n      this.brandService.loadBrands(); \n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Brand } from 'src/app/modules/brands/entity/brand';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { BehaviorSubject, of, Observable } from 'rxjs';\nimport { switchMap, delay, map } from 'rxjs/operators';\nimport { resolve, reject, Promise } from 'q';\nimport { promise } from 'protractor';\n\nexport interface DataState<T> {\n  loading: boolean;\n  data: T;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BrandService {\n\n\n  private brandsUrl = \"http://localhost:8080/apibrands\";\n  private brands$ = new BehaviorSubject({ loading: false, data: [] });\n\n  constructor(private httpClient: HttpClient) { }\n\n  getBrands$(): Observable<DataState<Brand[]>> {\n    return this.brands$.asObservable();\n  }\n\n  loadBrands() {\n    console.log(\"inside loadBrands... \")\n\n    /*    \n        return this.httpClient.get(this.brandsUrl)\n          .toPromise()\n          .then(response => {\n            console.log(response._embedded.apibrands)  \n            this.brands$.next({ loading: false, data: response._embedded.apibrands });\n          });\n    */\n\n    this.brands$.next({ loading: true, data: [] });\n\n    this.httpClient.get(this.brandsUrl).pipe(\n      map(res => {  \n\n        // important to get json properties from response\n        let resStr = JSON.stringify(res);\n        let resJSON = JSON.parse(resStr); \n        console.log(resJSON._embedded.apibrands)   \n        return resJSON._embedded.apibrands;\n      }),\n      delay(1000)\n    ).subscribe((brands: Brand[]) => {\n      console.log(\"subscribed here..\")\n      this.brands$.next({ loading: false, data: brands });\n    })\n  }\n\n  /*   \n    private homes$ = new BehaviorSubject({ loading: false, data: [] });\n  \n    constructor(private httpClient: HttpClient, private route: ActivatedRoute) { }\n  \n    gethomes$(): Observable<DataState<Home[]>> {\n      return this.homes$.asObservable();\n    }\n  \n    loadHomes(filters:Filters) {\n      this.homes$.next({ loading: true, data: [] });\n  \n      this.httpClient.get<any[]>('assets/mocks/homes.json').pipe(\n  \n        switchMap((homes: Home[]) => {\n  \n          if (filters.homeType.length) {\n           return of(homes.filter(listing => filters.homeType.includes(listing.type)));\n         }\n  \n          return of(homes);\n  \n        }),\n        \n        delay(1000)\n      ).subscribe((homes: Home[]) => {\n  \n        this.homes$.next({ loading: false, data: homes });\n  \n      });\n    }\n  \n    getFiltersFromUrlQueryParams(): Observable<Filters> {\n  \n      return this.route.queryParams.pipe(\n        switchMap(params => {\n          if (Array.isArray(params['home-type'])) {\n            return of({\n              homeType: params['home-type']\n            });\n          }\n  \n          if (typeof params['home-type'] === 'string') {\n            return of({\n              homeType: [params['home-type']]\n            });\n          }\n  \n          return of({\n            homeType: []\n          });\n        })\n      );\n  \n    }\n  */\n}\n"],"sourceRoot":""}